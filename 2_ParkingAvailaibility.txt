const int ROWS = 4; // Number of rows
const int COLS = 4; // Number of columns
int parkingGrid[ROWS][COLS];

void initParkingGrid() 
{
    for (int i = 0; i < ROWS; ++i)
        for (int j = 0; j < COLS; ++j)
            parkingGrid[i][j] = 0;
}

bool isSpaceAvailable() 
{
    for (int i = 0; i < ROWS; ++i) 
    {
        for (int j = 0; j < COLS; ++j) 
        {
            if (parkingGrid[i][j] == 0) 
            {
                return true; // Space available, return true
            }
        }
    }
    return false; // No space available, return false
}

void allocateParkingSpace(int row, int col) 
{
    for (int i = 0; i < ROWS; ++i) 
    {
        for (int j = 0; j < COLS; ++j) 
        {
            if (parkingGrid[i][j] == 0) 
            {
                parkingGrid[i][j] = 1; // Allocate the parking space
                row = i;
                col = j;
                return;
            }
        }
    }
}

void setup() 
{
    initParkingGrid();
    int enteringRow, enteringCol;
    
    if (isSpaceAvailable()) 
    {
        allocateParkingSpace(enteringRow, enteringCol);
        // Open barrier using Servo motor and update grid occupancy
    } 
    else 
    {
        // No space available, display a message or take appropriate action
    }
}
// Code language: Arduino (arduino)
// 16Ã—2 Lcd Interfac